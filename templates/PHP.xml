<templateSet group="PHP">
  <template name="h-u" value="header('Content-type:text/html;charset:utf-8');" description="utf-8" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="getStr" value="/**&#10; * getStr 取文本&#10; * @param  [string] $string [原文本]&#10; * @param  [string] $substrL [子文本左]&#10; * @param  [string] $substrR [子文本右]&#10; * @param  [bool] $f_dir [寻找方向 默认(false)从前向后找]&#10; * @param  [bool] $is_bs [是否区分大小写 默认(false)]&#10; * @return [string|bool]   [成功返回截取的文本失败返回false]&#10; */&#10;function getStr($string,$substrL,$substrR,$f_dir=false,$is_bs=false){&#10;&#9;if($substrL != ''){ //$substrL为空 取$substrR左边&#10;&#9;&#9;if($f_dir){ //寻找方向&#10;&#9;&#9;&#9;$indexL = $is_bs ? strrpos($string,$substrL) : strripos($string,$substrL);&#10;&#9;&#9;}else{&#10;&#9;&#9;&#9;$indexL = $is_bs ? strpos($string,$substrL) : stripos($string,$substrL);&#10;&#9;&#9;}&#10;&#9;}&#9;&#10;&#9;if($substrR != ''){ //$substrR为空 取$substrL右边&#10;&#9;&#9;$indexL = empty($indexL)? 0:$indexL+strlen($substrL); //计算偏移值&#10;&#9;&#9;if($f_dir){ //寻找方向&#10;&#9;&#9;&#9;$indexR = $is_bs ? strrpos($string,$substrR,$indexL) : strripos($string,$substrR,$indexL);&#10;&#9;&#9;}else{&#10;&#9;&#9;&#9;$indexR = $is_bs ? strpos($string,$substrR,$indexL) : stripos($string,$substrR,$indexL);&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;if($substrL == '' || $substrR == ''){&#10;&#9;&#9;return $substrR == '' ? substr($string,$indexL+strlen($substrL)) : substr($string,0,$indexR);&#10;&#9;}else{&#10;&#9;&#9;$indexR= $indexR-$indexL; //计算截取长度&#10;&#9;&#9;if($indexR &lt;= 0)return;&#10;&#9;&#9;return substr($string,$indexL,$indexR);&#10;&#9;}&#10;}" description="取文本中间" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="implodes" value="/**&#10;*@params $arr array 待转换数组&#10;*@params $glue string 连接符&#10;*@return $str string 转换后的数据&#10;*/&#10;function implodes($arr,$glue=''){&#10;&#9;if(!is_array($arr))return $arr;//判断不是数组直接返回&#10;&#9;$str = '';&#10;&#9;end($arr);&#10;&#9;$endK= key($arr); //获取最后一个key&#10;&#9;foreach($arr as $k=&gt;$v){&#10;&#9;&#9;if(is_array($v)){&#10;&#9;&#9;&#9;$tmp = implodes($v,$glue); //判断是数组-&gt;递归&#10;&#9;&#9;&#9;if($endK != $k){ //判断是否为最后一个成员&#10;&#9;&#9;&#9;&#9;if(!empty($tmp))$str .= $tmp.$glue; //不是-&gt;加连接符&#10;&#9;&#9;&#9;}else{&#10;&#9;&#9;&#9;&#9;if(!empty($tmp))$str .= $tmp;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}else{&#10;&#9;&#9;&#9;if($endK != $k){ //判断是否为最后一个成员&#10;&#9;&#9;&#9;&#9;if(!empty($v))$str .= $v.$glue;//不是-&gt;加连接符&#10;&#9;&#9;&#9;}else{&#10;&#9;&#9;&#9;&#9;if(!empty($v))$str .= $v;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return $str;&#10;}" description="多维数组到文本" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="tpc" value="&#10;namespace $Admin$\Controller;&#10;&#10;use Think\Controller;&#10;&#10;class $Index$Controller extends Controller&#10;{&#10;    public function index()&#10;    {&#10;        $this-&gt;display();&#10;        &#10;    }&#10;}" description="thinkphp controller" toReformat="false" toShortenFQNames="true">
    <variable name="Admin" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Index" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="upd" value="if( IS_POST ){&#10;    $Model = D('$SELECTION$');&#10;    if( $Model-&gt;create() ){&#10;        if( $Model-&gt;save() !== false ){&#10;            $this-&gt;success('编辑成功!');die;&#10;        }else{&#10;            $this-&gt;error('错误SQL: ' . $Model-&gt;getLastSql());&#10;        }&#10;    }else{&#10;        $this-&gt;error('编辑失败!'.$Model-&gt;getError() );&#10;    }&#10;}" description="think upd" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="add" value="if (IS_POST) {&#10;    $Model = D('$SELECTION$');&#10;    if ( $Model-&gt;create() ) {&#10;        if ( $Model-&gt;add() ) {&#10;            $this-&gt;success('添加成功!','lst');die;&#10;        }else{&#10;            $this-&gt;error('错误SQL: ' . $Model-&gt;getLastSql());&#10;        }&#10;    } else {&#10;        $this-&gt;error('添加失败!' . $Model-&gt;getError() );&#10;    }&#10;}" description="think add" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="tpm" value="namespace $Admin$\Model;&#10;&#10;use Think\Model;&#10;&#10;class $Auth$Model extends Model&#10;{&#10;    protected $_validate = [&#10;      ['username','require','用户名必填!'],&#10;    ];&#10;}" description="think model" toReformat="false" toShortenFQNames="true">
    <variable name="Admin" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Auth" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>